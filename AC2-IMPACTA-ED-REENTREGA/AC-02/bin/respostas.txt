Link para arquivo com desenhos:
https://docs.google.com/document/d/1wOfapFNcjUWEcfgqZuP9PwBxIBEr2olp5TgL0ABkqtU/edit?usp=sharing

AC2 - Estrutura de Dados
Integrantes:
Arthur Silva
Carolina Gabrielle
Larissa Ionafa
Lucas Silva
Roberta Yumi

Respostas:

1.Desenvolva um projeto no GitHub que Implemente os testes o TAD Lista Arranjo.
//---------------------------OK

2. Desenvolva um projeto no GitHub que estenda a classe de testes do TAD Pilha.
//---------------------------OK

3.Desenvolva um projeto no GitHub que implemente os testes do TAD Pilha usando LSE.
//---------------------------OK

4.Exercícios:
a. Crie testes e programas Java que: 
//---------------------------OK

b. Inverta os dados de um arranjo usando o TAD Pilha usando LSE.
//---------------------------OK

c. Verifique se parênteses, colchetes e chaves estão corretos numa expressão
	matemática, por exemplo: [(5 + x)/4 – 2*(y + z)]
	i. Correto: ()(( )){([( )])}
	ii. Correto: ((( )(( )){([( )])}))
	iii. Incorreto: )(( )){([( )])}
	iv. Incorreto: ({[])}
	v. Incorreto: (
//---------------------------OK

5.Suponha que uma lista inicialmente vazia S tenha executado um total de:
- 25 operações push 
- 12 operações top 
- 10 operações pop 
- 3 das quais geraram StackEmptyExceptions, que foram capturadas e ignoradas. 
Qual é o tamanho corrente de S?
Nao foi possivel realizar o top, pois a lista esta vazia
Nao foi possivel realizar o top, pois a lista esta vazia
Nao foi possivel realizar o top, pois a lista esta vazia
Pilha aṕos 22 operacoes de push
[22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Pilha aṕos 7 operações de pop
[15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

O tamanho da lista é: 15
//---------------------------OK


6.Se implementarmos a pilha S do problema anterior usando um arranjo, então qual
será o valor corrente da variável de instância top?
O valor de corrente de top é: 15
//---------------------------OK


7.Descreva a saída resultante da seguinte série de operações de pilha: 
[5]
[5, 3]
[5]
[5, 2]
[5, 2, 8]
[5, 2]
[5]
[5, 9]
[5, 9, 1]
[5, 9]
[5, 9, 7]
[5, 9, 7, 6]
[5, 9, 7]
[5, 9]
[5, 9, 4]
[5, 9]
[5]
//---------------------------OK

8. Crie os testes e implemente o TAD Fila. Use implementação do TAD Pilha como
exemplo.
//---------------------------OK

9. Implemente o TAD Fila com base nos testes e no fragmento de implementação de duas operações apresentadas a seguir (Tarefa 13 - TAD-Fila.pptx, slides 19, 20 e 21).
 [Fazendo] Yumi.

10. Desenhe figuras demonstrando cada um dos passos principais dos métodos do TAD lista de nodos.
addBefore(p, e)
//---------------------------OK
addFirst(e)
//---------------------------OK
addLast(e)
//---------------------------OK

11.Implemente um método não recursivo para inverter uma lista de nodos.
//---------------------------OK

12.Implemente um novo método, makeFirst(p), que move o elemento na posição p para a
primeira posição, mantendo a ordem relativa dos demais elementos inalterada.

13.A implementação de NodePositionList não faz verificações de erro para testar se uma
dada posição p é realmente membro dessa lista em particular.
	a. Por exemplo, se p é uma posição da lista S, a execução T.addAfter(p,e) deveria
	lançar a exceção InvalidPositionException pois p não é uma posição de T.
	
	b. Descreva como alterar a implementação de NodePositionList de uma forma
	eficiente que impeça esses maus usos.
